@model Models.CategoryViewModel

@inject IHtmlLocalizer<SharedResource> SharedLocalizer
@using Models
@{
    var BaseModel = (BaseViewModel)ViewData["BaseModel"];
}

<div class="category-name-container">
    <h3 class="category-title">@SharedLocalizer["Categories"]</h3>
    <nav class="navbar navbar-expand-lg navbar-light category-menu">
        <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
            <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
                @foreach (var item in BaseModel.Categories)
                {
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="@(item.SubCategories.Count == 0 ? Url.Action("ProductsList", "Product", new { categoryId = item.Id })
                                           :
                                           "/Category/GetCategoriesByParentId?parentid=" + item.Id)" id="@($"navbarDropdownMenuLink{item.Id}")" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @item.Translation.Name
                        </a>
                        @if (item.SubCategories.Count > 0)
                        {
                            await Html.RenderPartialAsync("_CategoryMenuItem", item);
                        }
                    </li>
                }
            </ul>
        </div>
    </nav>
</div>